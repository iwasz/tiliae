<?xml version="1.0" encoding="UTF-8"?>
<beans>

  <!--To jest tylko na rozruch, bean wewnętrzny jest singletonem. -->
  <Bar id="bean">
    <cargs>
      <value>Test</value>
    </cargs>

    <City id="innerCity" singleton="true" set-as="city3" />

    <!--Teraz property city i city3 mają referencję do tego samego obiektu. -->
    <ref bean="innerCity" set-as="city" />
  </Bar>

  <BarList id="listaSingleton">
    <ref bean="bean" />
    <ref bean="bean" />
  </BarList>

  <!-- ======================================================================================== -->

  <!--To jest tylko na rozruch, bean wewnętrzny jest singletonem. -->
  <Bar id="bean4">
    <constructor-arg>
      <value>Test</value>
    </constructor-arg>

    <City id="innerCity4" scope="prototype" set-as="city3" />

    <!--Teraz property city i city3 mają referencję do tego samego obiektu. -->
    <ref bean="innerCity4" set-as="city" />
  </Bar>

  <BarList id="listaPrototype">
    <ref bean="bean4" />
    <ref bean="bean4" />
  </BarList>

  <!-- ======================================================================================== -->

  <!--Tutaj mamy innerCity2 ze scope bean. Pierwszy sposób scope-bean. -->
  <Bar id="bean2">
    <constructor-arg>
      <value>Test</value>
    </constructor-arg>

    <City id="innerCity2" scope="bean" set-as="city3" />
    <!--Teraz property city i city3 mają referencję do tego samego obiektu. -->
    <ref bean="innerCity2" set-as="city" />
  </Bar>


  <BarList id="listaBean1">
    <ref bean="bean2" />
    <ref bean="bean2" />
  </BarList>




  <!--Tutaj mamy innerCity2 ze scope bean. Pierwszy sposób scope-bean. -->
  <Bar id="bean3">
    <constructor-arg>
      <value>Test</value>
    </constructor-arg>

    <City id="innerCity3" scope="bean" set-as="city3" />

    <!--Teraz property city i city3 mają referencję do tego samego obiektu. -->
    <ref bean="innerCity3" set-as="city" />
  </Bar>



  <BarList id="listaBean2">
    <ref bean="bean3" />
    <ref bean="bean3" />
  </BarList>

</beans>
